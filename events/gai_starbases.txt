namespace = gai_ai_starbase
#This event is designed to create "correct" starbases for the AI that give titan/colossus_yards and in general provide a better build than anything I could get working using the starbase_module/building system
#All event descriptions are now in the common\on actions\ folder
country_event = {
	id = gai_ai_starbase.1	
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		IF = {
			LIMIT = {
				any_owned_starbase = {
					solar_system = { is_same_value = owner.capital_scope.solar_system }
					has_starbase_size >= starbase_citadel
					OR = {
						AND = { 
							NOT = { has_starbase_building = titan_yards }
							owner = { has_technology = tech_titans }
						}
						AND = { 
							owner = { has_technology = tech_colossus }
							NOT = { has_starbase_building = colossus_yards }
						}
						NOT = { has_starbase_module = shipyard }
					}
				}
			}
			country_event = { id = gai_ai_starbase.7 }
		}
		IF = {
			LIMIT = {
				any_owned_starbase = {
					has_starbase_size >= starbase_starport
					NOT = { has_starbase_module = shipyard }
					solar_system = { 
						OR = {
							is_same_value = owner.capital_scope.solar_system
							any_neighbor_system = {
								solar_system = { is_same_value = owner.capital_scope.solar_system }
							}
						}
					}
				}
			}
			country_event = { id = gai_ai_starbase.2 }
		}
		if = {
			limit = {
				owner = { is_gestalt = no }
			}
			IF = {
				LIMIT = {
					any_owned_starbase = {
						NOR = { 
							solar_system = { is_same_value = owner.capital_scope.solar_system }
							solar_system = { has_star_flag = gai_trade }
						}
						has_starbase_size >= starbase_starfortress
					}
				}
				country_event = { id = gai_ai_starbase.10 }
			}
			IF = {
				LIMIT = {
					any_owned_starbase = {
						NOR = { 
							solar_system = { is_same_value = owner.capital_scope.solar_system }
							solar_system = { has_star_flag = gai_trade_protection }
						}
						has_starbase_size >= starbase_starfortress
					}
				}
				country_event = { id = gai_ai_starbase.11 }
			}
		}
		IF = {
			limit = {
				is_at_war = no
				OR = {
					AND = {
						has_technology = tech_starbase_5
						any_owned_starbase = {
							has_starbase_size = starbase_starfortress
						}
					}
					AND = {
						has_technology = tech_starbase_4
						any_owned_starbase = {
							has_starbase_size = starbase_starhold
						}
					}
					AND = {
						has_technology = tech_starbase_3
						any_owned_starbase = {
							has_starbase_size = starbase_starport
						}
					}
				}
			}
			country_event = { id = gai_ai_starbase.6 } #Upgrade Starbase
		}
		IF = {
			limit = {
				has_ascension_perk = ap_arcology_project
				NOT = { has_country_flag = gai_set_store }
			}
			every_owned_starbase = {
				set_starbase_building = {
					slot = 1
					building = resource_silo
				}
			}
			set_country_flag = gai_set_store
		}
	}
}

country_event = {
	id = gai_ai_starbase.2
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size = starbase_starport
				NOT = { has_starbase_module = shipyard }
				solar_system = {
					count_planets = { limit = { is_colony = yes } count > 0 }
				}
				NOT = { solar_system = { has_star_flag = gai_nearby_rival } }
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_building = {
				slot = 0
				building = crew_quarters
			}
			IF = {
				limit = {
					NOT = { owner = { is_gestalt = yes } }
				}
				set_starbase_module = {
					slot = 1
					module = trading_hub
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = yes }
				}
				set_starbase_module = {
					slot = 1
					module = solar_panel_network
				}
			}
			IF = {
				limit = {
					star = { is_inside_nebula = yes }
				}
				set_starbase_building = {
					slot = 0
					building = nebula_refinery
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = curator_intro }
						solar_system = { has_star_flag = enclave }
					}	
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = curator_think_tank
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = enclave_artist_encountered }
						solar_system = { has_star_flag = enclave }
					}
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = art_college
				}
			}
			IF = {
				limit = {
					owner = { has_technology = tech_sensors_3 }
				}
				set_starbase_building = {
					slot = 0
					building = black_hole_observatory
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.3
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size = starbase_starport
				NOT = { has_starbase_module = gun_battery }
				solar_system = { has_star_flag = gai_nearby_rival }
				NOT = { solar_system = { is_same_value = owner.capital_scope.solar_system } }
			}
			set_starbase_module = {
				slot = 0
				module = gun_battery
			}
			set_starbase_module = {
				slot = 1
				module = gun_battery
			}
			set_starbase_building = {
				slot = 0
				building = target_uplink_computer
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.4
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size = starbase_starhold
				OR = {
					count_starbase_modules = {
						type = solar_panel_network
						count < 3
					}
					count_starbase_modules = {
						type = trading_hub
						count < 3
					}
				}
				solar_system = {
					count_planets = { limit = { is_colony = yes } count > 0 }
				}
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_building = {
				slot = 0
				building = crew_quarters
			}
			IF = {
				limit = {
					NOT = { owner = { is_gestalt = yes } }
				}
				set_starbase_module = {
					slot = 1
					module = trading_hub
				}
				set_starbase_module = {
					slot = 2
					module = trading_hub
				}
				set_starbase_module = {
					slot = 3
					module = trading_hub
				}
				set_starbase_building = {
					slot = 1
					building = offworld_trading_company
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = yes }
				}
				set_starbase_module = {
					slot = 1
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 2
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 3
					module = solar_panel_network
				}
				set_starbase_building = {
					slot = 1
					building = hydroponics_bay
				}
			}
			IF = {
				limit = {
					star = { is_inside_nebula = yes }
				}
				set_starbase_building = {
					slot = 0
					building = nebula_refinery
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = curator_intro }
						solar_system = { has_star_flag = enclave }
					}	
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = curator_think_tank
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = enclave_artist_encountered }
						solar_system = { has_star_flag = enclave }
					}
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = art_college
				}
			}
			IF = {
				limit = {
					owner = { has_technology = tech_sensors_3 }
				}
				set_starbase_building = {
					slot = 0
					building = black_hole_observatory
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.5
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size = starbase_starfortress
				OR = {
					count_starbase_modules = {
						type = solar_panel_network
						count < 5
					}
					count_starbase_modules = {
						type = trading_hub
						count < 5
					}
				}
				solar_system = {
					count_planets = { limit = { is_colony = yes } count > 0 }
				}
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_building = {
				slot = 0
				building = crew_quarters
			}
			IF = {
				limit = {
					NOT = { owner = { is_gestalt = yes } }
				}
				set_starbase_module = {
					slot = 1
					module = trading_hub
				}
				set_starbase_module = {
					slot = 2
					module = trading_hub
				}
				set_starbase_module = {
					slot = 3
					module = trading_hub
				}
				set_starbase_building = {
					slot = 1
					building = offworld_trading_company
				}
				set_starbase_module = {
					slot = 4
					module = trading_hub
				}
				set_starbase_module = {
					slot = 5
					module = trading_hub
				}
				set_starbase_building = {
					slot = 2
					building = hydroponics_bay
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = yes }
				}
				set_starbase_module = {
					slot = 1
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 2
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 3
					module = solar_panel_network
				}
				set_starbase_building = {
					slot = 1
					building = hydroponics_bay
				}
				set_starbase_module = {
					slot = 4
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 5
					module = solar_panel_network
				}
				set_starbase_building = {
					slot = 2
					building = target_uplink_computer
				}
			}
			IF = {
				limit = {
					star = { is_inside_nebula = yes }
				}
				set_starbase_building = {
					slot = 0
					building = nebula_refinery
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = curator_intro }
						solar_system = { has_star_flag = enclave }
					}	
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = curator_think_tank
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = enclave_artist_encountered }
						solar_system = { has_star_flag = enclave }
					}
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = art_college
				}
			}
			IF = {
				limit = {
					owner = { has_technology = tech_sensors_3 }
				}
				set_starbase_building = {
					slot = 0
					building = black_hole_observatory
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.6
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		IF = {
			limit = {
				has_technology = tech_starbase_5
				has_resource = { type = alloys amount > 2345 }
			}
			random_owned_starbase =	{
				limit = {
					has_starbase_size = starbase_starfortress
				}
				set_starbase_size = starbase_citadel
				owner = {
					add_resource = {
						alloys = -2345
					}
				}
				IF = {
					limit = {
						owner = { has_country_flag = gai_regular_tall }
					}
					IF = {
						limit = {
							solar_system = { is_same_value = owner.capital_scope.solar_system }
						}
						set_starbase_module = {
							slot = 1
							module = shipyard
						}
						set_starbase_module = {
							slot = 2
							module = trading_hub
						}
						set_starbase_module = {
							slot = 3
							module = shipyard
						}
						set_starbase_building = {
							slot = 1
							building = fleet_academy
						}
						set_starbase_module = {
							slot = 4
							module = shipyard
						}
						set_starbase_module = {
							slot = 5
							module = shipyard
						}
						set_starbase_building = {
							slot = 2
							building = hydroponics_bay
						}
						set_starbase_building = {
							slot = 3
							building = resource_silo
						}
						IF = {
							limit = {
								owner = { has_technology = tech_titans }
							}
							set_starbase_building = {
								slot = 2
								building = titan_yards
							}
						}
						IF = {
							limit = {
								owner = { has_technology = tech_colossus }
							}
							set_starbase_building = {
								slot = 3
								building = colossus_yards
							}
						}
					}
					IF = {
						limit = {
							solar_system = { NOT = { is_same_value = owner.capital_scope.solar_system } }
						}
						set_starbase_module = {
							slot = 1
							module = gun_battery
						}
						set_starbase_module = {
							slot = 2
							module = gun_battery
						}
						set_starbase_module = {
							slot = 3
							module = missile_battery
						}
						set_starbase_module = {
							slot = 4
							module = missile_battery
						}
						set_starbase_module = {
							slot = 5
							module = gun_battery
						}
						set_starbase_module = {
							slot = 6
							module = gun_battery
						}
						set_starbase_building = {
							slot = 0
							building = target_uplink_computer
						}
						set_starbase_building = {
							slot = 1
							building = defense_grid
						}
						set_starbase_building = {
							slot = 2
							building = communications_jammer
						}
						set_starbase_building = {
							slot = 3
							building = disruption_field
						}
					}
				}
			}
		}
		IF = {
			limit = {
				has_technology = tech_starbase_4
				has_resource = { type = alloys amount > 837 }
			}
			random_owned_starbase =	{
				limit = {
					has_starbase_size = starbase_starhold
				}
				set_starbase_size = starbase_starfortress
				owner = {
					add_resource = {
						alloys = -837
					}
				}
				IF = {
					limit = {
						owner = { has_country_flag = gai_regular_tall }
					}
					IF = {
						limit = {
							solar_system = { is_same_value = owner.capital_scope.solar_system }
						}
						set_starbase_module = {
							slot = 1
							module = shipyard
						}
						set_starbase_module = {
							slot = 2
							module = trading_hub
						}
						set_starbase_module = {
							slot = 3
							module = shipyard
						}
						set_starbase_building = {
							slot = 1
							building = fleet_academy
						}
						set_starbase_module = {
							slot = 4
							module = shipyard
						}
						set_starbase_module = {
							slot = 5
							module = shipyard
						}
						set_starbase_building = {
							slot = 2
							building = hydroponics_bay
						}
						set_starbase_building = {
							slot = 3
							building = resource_silo
						}
						IF = {
							limit = {
								owner = { has_technology = tech_titans }
							}
							set_starbase_building = {
								slot = 2
								building = titan_yards
							}
						}
						IF = {
							limit = {
								owner = { has_technology = tech_colossus }
							}
							set_starbase_building = {
								slot = 3
								building = colossus_yards
							}
						}
					}
					IF = {
						limit = {
							solar_system = { NOT = { is_same_value = owner.capital_scope.solar_system } }
						}
						set_starbase_module = {
							slot = 1
							module = gun_battery
						}
						set_starbase_module = {
							slot = 2
							module = gun_battery
						}
						set_starbase_module = {
							slot = 3
							module = missile_battery
						}
						set_starbase_module = {
							slot = 4
							module = missile_battery
						}
						set_starbase_module = {
							slot = 5
							module = gun_battery
						}
						set_starbase_module = {
							slot = 6
							module = gun_battery
						}
						set_starbase_building = {
							slot = 0
							building = target_uplink_computer
						}
						set_starbase_building = {
							slot = 1
							building = defense_grid
						}
						set_starbase_building = {
							slot = 2
							building = communications_jammer
						}
						set_starbase_building = {
							slot = 3
							building = disruption_field
						}
					}
				}
			}
		}
		IF = {
			limit = {
				has_technology = tech_starbase_3
				has_resource = { type = alloys amount > 500 }
			}
			random_owned_starbase =	{
				limit = {
					has_starbase_size = starbase_starport
				}
				set_starbase_size = starbase_starhold
				owner = {
					add_resource = {
						alloys = -500
					}
				}
				IF = {
					limit = {
						owner = { has_country_flag = gai_regular_tall }
					}
					IF = {
						limit = {
							solar_system = { is_same_value = owner.capital_scope.solar_system }
						}
						set_starbase_module = {
							slot = 1
							module = shipyard
						}
						set_starbase_module = {
							slot = 2
							module = trading_hub
						}
						set_starbase_module = {
							slot = 3
							module = shipyard
						}
						set_starbase_building = {
							slot = 1
							building = fleet_academy
						}
						set_starbase_module = {
							slot = 4
							module = shipyard
						}
						set_starbase_module = {
							slot = 5
							module = shipyard
						}
						set_starbase_building = {
							slot = 2
							building = hydroponics_bay
						}
						set_starbase_building = {
							slot = 3
							building = resource_silo
						}
						IF = {
							limit = {
								owner = { has_technology = tech_titans }
							}
							set_starbase_building = {
								slot = 2
								building = titan_yards
							}
						}
						IF = {
							limit = {
								owner = { has_technology = tech_colossus }
							}
							set_starbase_building = {
								slot = 3
								building = colossus_yards
							}
						}
					}
					IF = {
						limit = {
							solar_system = { NOT = { is_same_value = owner.capital_scope.solar_system } }
						}
						set_starbase_module = {
							slot = 1
							module = gun_battery
						}
						set_starbase_module = {
							slot = 2
							module = gun_battery
						}
						set_starbase_module = {
							slot = 3
							module = missile_battery
						}
						set_starbase_module = {
							slot = 4
							module = missile_battery
						}
						set_starbase_module = {
							slot = 5
							module = gun_battery
						}
						set_starbase_module = {
							slot = 6
							module = gun_battery
						}
						set_starbase_building = {
							slot = 0
							building = target_uplink_computer
						}
						set_starbase_building = {
							slot = 1
							building = defense_grid
						}
						set_starbase_building = {
							slot = 2
							building = communications_jammer
						}
						set_starbase_building = {
							slot = 3
							building = disruption_field
						}
					}
				}
			}
		}
	}
}


country_event = {
	id = gai_ai_starbase.7
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				solar_system = { is_same_value = owner.capital_scope.solar_system }
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_building = {
				slot = 0
				building = crew_quarters
			}
			IF = {
				limit = {
					NOT = { owner = { is_gestalt = yes } }
				}
				set_starbase_module = {
					slot = 1
					module = shipyard
				}
				set_starbase_module = {
					slot = 2
					module = shipyard
				}
				set_starbase_module = {
					slot = 3
					module = shipyard
				}
				set_starbase_building = {
					slot = 1
					building = fleet_academy
				}
				set_starbase_module = {
					slot = 4
					module = shipyard
				}
				set_starbase_module = {
					slot = 5
					module = shipyard
				}
				set_starbase_building = {
					slot = 2
					building = hydroponics_bay
				}
				set_starbase_building = {
					slot = 3
					building = resource_silo
				}
				IF = {
					limit = {
						owner = { has_technology = tech_titans }
					}
					set_starbase_building = {
						slot = 2
						building = titan_yards
					}
				}
				IF = {
					limit = {
						owner = { has_technology = tech_colossus }
					}
					set_starbase_building = {
						slot = 3
						building = colossus_yards
					}
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = yes }
				}
				set_starbase_module = {
					slot = 1
					module = shipyard
				}
				set_starbase_module = {
					slot = 2
					module = shipyard
				}
				set_starbase_module = {
					slot = 3
					module = shipyard
				}
				set_starbase_building = {
					slot = 1
					building = fleet_academy
				}
				set_starbase_module = {
					slot = 4
					module = shipyard
				}
				set_starbase_module = {
					slot = 5
					module = shipyard
				}
				set_starbase_building = {
					slot = 2
					building = target_uplink_computer
				}
				set_starbase_building = {
					slot = 3
					building = resource_silo
				}
				IF = {
					limit = {
						owner = { has_technology = tech_titans }
					}
					set_starbase_building = {
						slot = 2
						building = titan_yards
					}
				}
				IF = {
					limit = {
						owner = { has_technology = tech_colossus }
					}
					set_starbase_building = {
						slot = 3
						building = colossus_yards
					}
				}
			}
			IF = {
				limit = {
					star = { is_inside_nebula = yes }
				}
				set_starbase_building = {
					slot = 0
					building = nebula_refinery
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = curator_intro }
						solar_system = { has_star_flag = enclave }
					}	
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = curator_think_tank
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = enclave_artist_encountered }
						solar_system = { has_star_flag = enclave }
					}
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = art_college
				}
			}
			IF = {
				limit = {
					owner = { has_technology = tech_sensors_3 }
				}
				set_starbase_building = {
					slot = 0
					building = black_hole_observatory
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.8
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				OR = {
					has_starbase_module = trading_hub
					has_starbase_module = solar_panel_network
					AND = {
						has_starbase_size = starbase_starhold
						count_starbase_modules = { type = anchorage count < 3 }
					}
					AND = {
						has_starbase_size = starbase_starfortress
						count_starbase_modules = { type = anchorage count < 5 }
					}
				}
				NOT = { solar_system = { is_same_value = owner.capital_scope.solar_system } }
				solar_system = {
					count_planets = { limit = { is_colony = yes } count > 0 }
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = no }
				}
				set_starbase_module = {
					slot = 0
					module = shipyard
				}
				set_starbase_building = {
					slot = 0
					building = crew_quarters
				}
				set_starbase_module = {
					slot = 1
					module = anchorage
				}
				set_starbase_module = {
					slot = 2
					module = hangar_bay
				}
				set_starbase_module = {
					slot = 3
					module = hangar_bay
				}
				set_starbase_building = {
					slot = 1
					building = naval_logistics_office
				}
				set_starbase_module = {
					slot = 4
					module = anchorage
				}
				set_starbase_module = {
					slot = 5
					module = anchorage
				}
				set_starbase_building = {
					slot = 2
					building = fleet_academy
				}
			}
			ELSE = {
				set_starbase_module = {
					slot = 0
					module = shipyard
				}
				set_starbase_building = {
					slot = 0
					building = crew_quarters
				}
				set_starbase_module = {
					slot = 1
					module = anchorage
				}
				set_starbase_module = {
					slot = 2
					module = anchorage
				}
				set_starbase_module = {
					slot = 3
					module = anchorage
				}
				set_starbase_building = {
					slot = 1
					building = naval_logistics_office
				}
				set_starbase_module = {
					slot = 4
					module = anchorage
				}
				set_starbase_module = {
					slot = 5
					module = anchorage
				}
				set_starbase_building = {
					slot = 2
					building = fleet_academy
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.9
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_module = anchorage
				NOT = { solar_system = { is_same_value = owner.capital_scope.solar_system } }
				solar_system = {
					count_planets = { limit = { is_colony = yes } count > 0 }
				}
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_building = {
				slot = 0
				building = crew_quarters
			}
			IF = {
				limit = {
					NOT = { owner = { is_gestalt = yes } }
				}
				set_starbase_module = {
					slot = 1
					module = trading_hub
				}
				set_starbase_module = {
					slot = 2
					module = trading_hub
				}
				set_starbase_module = {
					slot = 3
					module = trading_hub
				}
				set_starbase_building = {
					slot = 1
					building = offworld_trading_company
				}
				set_starbase_module = {
					slot = 4
					module = trading_hub
				}
				set_starbase_module = {
					slot = 5
					module = trading_hub
				}
				set_starbase_building = {
					slot = 2
					building = resource_silo
				}
				set_starbase_building = {
					slot = 3
					building = hydroponics_bay
				}
			}
			IF = {
				limit = {
					owner = { is_gestalt = yes }
				}
				set_starbase_module = {
					slot = 1
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 2
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 3
					module = solar_panel_network
				}
				set_starbase_building = {
					slot = 1
					building = hydroponics_bay
				}
				set_starbase_module = {
					slot = 4
					module = solar_panel_network
				}
				set_starbase_module = {
					slot = 5
					module = solar_panel_network
				}
				set_starbase_building = {
					slot = 2
					building = resource_silo
				}
				set_starbase_building = {
					slot = 3
					building = target_uplink_computer
				}
			}
			IF = {
				limit = {
					star = { is_inside_nebula = yes }
				}
				set_starbase_building = {
					slot = 0
					building = nebula_refinery
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = curator_intro }
						solar_system = { has_star_flag = enclave }
					}	
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = curator_think_tank
				}
			}
			IF = {
				limit = {
					OR = {
						owner = { has_country_flag = enclave_artist_encountered }
						solar_system = { has_star_flag = enclave }
					}
					owner = {
						NOR = { 
							has_valid_civic = civic_fanatic_purifiers 
							has_valid_civic = civic_hive_devouring_swarm 
							has_valid_civic = civic_machine_terminator 
						}
					}
				}
				set_starbase_building = {
					slot = 0
					building = art_college
				}
			}
			IF = {
				limit = {
					owner = { has_technology = tech_sensors_3 }
				}
				set_starbase_building = {
					slot = 0
					building = black_hole_observatory
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.20
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			limit = {
				OR = {
					AND = {
						has_starbase_size = starbase_starport
						owner = { 
							has_technology = tech_starbase_3
							has_resource = { type = alloys amount > 500 }
						}
					}
					AND = {
						has_starbase_size = starbase_starhold
						owner = { 
							has_technology = tech_starbase_4
							has_resource = { type = alloys amount > 1000 }
						}
					}
					AND = {
						has_starbase_size = starbase_starfortress
						owner = { 
							has_technology = tech_starbase_5
							has_resource = { type = alloys amount > 3000 }
						}
					}
				}
			}
			IF = {
				limit = {
					owner = { 
						has_technology = tech_starbase_3 
						has_resource = { type = alloys amount > 500 }
					}
					has_starbase_size = starbase_starport
				}
				set_starbase_size = starbase_starhold
				OWNER = {
					add_resource = {
						alloys = -500
					}
				}
			}
			IF = {
				limit = {
					owner = { 
						has_technology = tech_starbase_4
						has_resource = { type = alloys amount > 1000 }
					}
					has_starbase_size = starbase_starhold
				}
				set_starbase_size = starbase_starfortress
				OWNER = {
					add_resource = {
						alloys = -1000
					}
				}
			}
			IF = {
				limit = {
					owner = { 
						has_technology = tech_starbase_5 
						has_resource = { type = alloys amount > 3000 }
					}
					has_starbase_size = starbase_starfortress
				}
				set_starbase_size = starbase_citadel
				OWNER = {
					add_resource = {
						alloys = -3000
					}
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.200
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase = {
			limit = {
				count_starbase_modules = { type = shipyard count < 3 }
				has_starbase_size >= starbase_citadel
			}
			IF = {
				limit = {
					owner = { is_country_type = awakened_fallen_empire }
				}
				set_starbase_module = {
					slot = 0
					module = shipyard
				}
				set_starbase_module = {
					slot = 1
					module = shipyard
				}
				set_starbase_module = {
					slot = 2
					module = shipyard
				}
				set_starbase_module = {
					slot = 3
					module = gun_battery
				}
				set_starbase_module = {
					slot = 4
					module = anchorage
				}
				set_starbase_module = {
					slot = 5
					module = anchorage
				}
				set_starbase_building = {
					slot = 1
					building = titan_yards
				}
				set_starbase_building = {
					slot = 2
					building = fleet_academy
				}
				set_starbase_building = {
					slot = 3
					building = naval_logistics_office
				}
				set_starbase_building = {
					slot = 4
					building = resource_silo
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.10
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size >= starbase_starfortress
				#solar_system = { has_trade_route = yes }
				NOR = { 
					solar_system = { is_same_value = owner.capital_scope.solar_system }
					solar_system = { has_star_flag = gai_trade_protection_hub }
					solar_system = { has_star_flag = gai_trade }
					solar_system = {
						any_neighbor_system = {
							exists = space_owner
							NOT = { space_owner = { is_same_value = root } }
						}
					}
					solar_system = {
						any_neighbor_system = { has_star_flag = gai_trade }
					}
				}
			}
			set_starbase_module = {
				slot = 0
				module = trading_hub
			}
			set_starbase_module = {
				slot = 1
				module = trading_hub
			}
			set_starbase_module = {
				slot = 2
				module = trading_hub
			}
			set_starbase_module = {
				slot = 3
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 4
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 5
				module = hangar_bay
			}
			set_starbase_building = {
				slot = 0
				building = offworld_trading_company
			}
			set_starbase_building = {
				slot = 1
				building = target_uplink_computer
			}
			set_starbase_building = {
				slot = 2
				building = communications_jammer
			}
			set_starbase_building = {
				slot = 3
				building = disruption_field
			}
			solar_system = {
				set_star_flag = gai_trade
				set_star_flag = gai_trade_hub
				every_neighbor_system = { 
					ignore_hyperlanes = no 
					limit = { 
						exists = space_owner 
						space_owner = { is_same_value = root } 
					}
					set_star_flag = gai_trade
					every_neighbor_system = { 
						ignore_hyperlanes = no 
						limit = { 
							exists = space_owner 
							space_owner = { is_same_value = root } 
						}
						set_star_flag = gai_trade
						every_neighbor_system = { 
							ignore_hyperlanes = no 
							limit = { 
								exists = space_owner 
								space_owner = { is_same_value = root } 
							}
							set_star_flag = gai_trade
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.11
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		random_owned_starbase =	{
			LIMIT = {
				has_starbase_size >= starbase_starfortress
				#solar_system = { has_trade_route = yes }
				NOR = { 
					solar_system = { is_same_value = owner.capital_scope.solar_system }
					AND = {
						solar_system = { has_star_flag = gai_trade_protection }
						solar_system = {
							trade_intercepted_value < 1
							any_neighbor_system = {
								trade_intercepted_value < 1
							}
						}
					}
					solar_system = { has_star_flag = gai_trade_hub }
					solar_system = {
						any_neighbor_system = { has_star_flag = gai_trade_protection }
					}
				}
			}
			set_starbase_module = {
				slot = 0
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 1
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 2
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 3
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 4
				module = hangar_bay
			}
			set_starbase_module = {
				slot = 5
				module = hangar_bay
			}
			set_starbase_building = {
				slot = 0
				building = offworld_trading_company
			}
			set_starbase_building = {
				slot = 1
				building = target_uplink_computer
			}
			set_starbase_building = {
				slot = 2
				building = communications_jammer
			}
			set_starbase_building = {
				slot = 3
				building = disruption_field
			}
			solar_system = {
				set_star_flag = gai_trade_protection
				set_star_flag = gai_trade_protection_hub
				every_neighbor_system = {
					ignore_hyperlanes = no 
					limit = { 
						exists = space_owner 
						space_owner = { is_same_value = root } 
					} 
					set_star_flag = gai_trade_protection
					every_neighbor_system = { 
						ignore_hyperlanes = no 
						limit = { 
							exists = space_owner 
							space_owner = { is_same_value = root } 
						} 
						set_star_flag = gai_trade_protection
						every_neighbor_system = { 
							ignore_hyperlanes = no 
							limit = { 
								exists = space_owner 
								space_owner = { is_same_value = root } 
							} 
							set_star_flag = gai_trade_protection
							every_neighbor_system = { 
								ignore_hyperlanes = no 
								limit = { 
									exists = space_owner 
									space_owner = { is_same_value = root } 
								} 
								set_star_flag = gai_trade_protection
								every_neighbor_system = { 
									ignore_hyperlanes = no 
									limit = { 
										exists = space_owner 
										space_owner = { is_same_value = root } 
									} 
									set_star_flag = gai_trade_protection
									every_neighbor_system = { 
										ignore_hyperlanes = no 
										limit = { 
											exists = space_owner 
											space_owner = { is_same_value = root } 
										} 
										set_star_flag = gai_trade_protection
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

country_event = {
	id = gai_ai_starbase.12
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		every_owned_starbase = {
			limit = {
				has_starbase_size >= starbase_starport
				solar_system = {
					OR = {
						solar_system = { is_same_value = owner.capital_scope.solar_system }
						any_neighbor_system = {
							solar_system = { is_same_value = owner.capital_scope.solar_system }
						}
					}
				}
			}
			set_starbase_module = {
				slot = 0
				module = shipyard
			}
			set_starbase_module = {
				slot = 1
				module = shipyard
			}
		}
	}
}